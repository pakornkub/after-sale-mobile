{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { FormControl, VStack, Input, Icon, Button, Text, Center, Box, useToast } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useAuthLogin } from \"../../hooks/useLogin\";\nimport AppAlert from \"../../components/AppAlert\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport Logo from \"../../assets/toto.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _errors$username, _errors$password;\n\n  var toast = useToast();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var _useAuthLogin = useAuthLogin(),\n      isLoading = _useAuthLogin.isLoading,\n      isError = _useAuthLogin.isError,\n      error = _useAuthLogin.error,\n      status = _useAuthLogin.status,\n      mutate = _useAuthLogin.mutate;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var onSubmit = useCallback(function (data) {\n    mutate(data);\n  }, []);\n  useEffect(function () {\n    if (status === \"success\") {} else if (status === \"error\") {\n      toast.show({\n        render: function render() {\n          var _error$response, _error$response$data;\n\n          return _jsx(AppAlert, {\n            text: error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message,\n            type: \"error\"\n          });\n        },\n        placement: \"top\",\n        duration: 2000\n      });\n    }\n\n    return function () {};\n  }, [status]);\n  return _jsxs(Box, {\n    flex: 1,\n    safeArea: true,\n    children: [_jsx(LoadingScreen, {\n      show: isLoading\n    }), _jsx(Center, {\n      mt: \"10%\",\n      children: _jsx(Logo, {\n        width: 250,\n        height: 120\n      })\n    }), _jsx(Box, {\n      p: 5,\n      children: _jsxs(VStack, {\n        space: 5,\n        p: 10,\n        backgroundColor: \"coolGray.200\",\n        borderRadius: \"xl\",\n        children: [_jsx(Center, {\n          children: _jsx(Text, {\n            fontWeight: \"extrabold\",\n            color: \"coolGray.700\",\n            children: \"AFTER SALE\"\n          })\n        }), _jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: \"username\" in errors,\n          children: [_jsx(Controller, {\n            control: control,\n            render: function render(_ref) {\n              var _ref$field = _ref.field,\n                  onChange = _ref$field.onChange,\n                  onBlur = _ref$field.onBlur,\n                  value = _ref$field.value;\n              return _jsx(Input, {\n                InputLeftElement: _jsx(Icon, {\n                  as: _jsx(MaterialIcons, {\n                    name: \"person\"\n                  }),\n                  size: \"md\"\n                }),\n                variant: \"underlined\",\n                p: 2,\n                placeholder: \"Username\",\n                onBlur: onBlur,\n                onChangeText: onChange,\n                value: value\n              });\n            },\n            name: \"username\",\n            rules: {\n              required: \"Username is required\"\n            },\n            defaultValue: \"pakorn.wo\"\n          }), _jsx(FormControl.ErrorMessage, {\n            children: (_errors$username = errors.username) == null ? void 0 : _errors$username.message\n          })]\n        }), _jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: \"password\" in errors,\n          children: [_jsx(Controller, {\n            control: control,\n            render: function render(_ref2) {\n              var _ref2$field = _ref2.field,\n                  onChange = _ref2$field.onChange,\n                  onBlur = _ref2$field.onBlur,\n                  value = _ref2$field.value;\n              return _jsx(Input, {\n                InputLeftElement: _jsx(Icon, {\n                  as: _jsx(MaterialIcons, {\n                    name: \"lock\"\n                  }),\n                  size: \"md\"\n                }),\n                variant: \"underlined\",\n                p: 2,\n                type: show ? \"text\" : \"password\",\n                placeholder: \"Password\",\n                InputRightElement: _jsx(Icon, {\n                  size: \"md\",\n                  color: show ? \"blue.500\" : \"coolGray.500\",\n                  as: _jsx(MaterialIcons, {\n                    name: show ? \"visibility\" : \"visibility-off\"\n                  }),\n                  onPress: function onPress() {\n                    return setShow(!show);\n                  }\n                }),\n                onBlur: onBlur,\n                onChangeText: onChange,\n                value: value\n              });\n            },\n            name: \"password\",\n            rules: {\n              required: \"Password is required\"\n            },\n            defaultValue: \"1234\"\n          }), _jsx(FormControl.ErrorMessage, {\n            children: (_errors$password = errors.password) == null ? void 0 : _errors$password.message\n          })]\n        }), _jsx(Button, {\n          leftIcon: _jsx(Icon, {\n            as: _jsx(MaterialIcons, {\n              name: \"login\"\n            }),\n            size: \"sm\"\n          }),\n          onPress: handleSubmit(onSubmit),\n          bgColor: '#14439c',\n          children: \"SIGN IN\"\n        })]\n      })\n    }), _jsx(Center, {\n      flex: 1,\n      children: _jsx(Text, {\n        children: \"V 1.0\"\n      })\n    })]\n  });\n};\n\nexport default Login;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useForm","Controller","FormControl","VStack","Input","Icon","Button","Text","Center","Box","useToast","MaterialIcons","useAuthLogin","AppAlert","LoadingScreen","Logo","Login","toast","control","handleSubmit","errors","formState","isLoading","isError","error","status","mutate","show","setShow","onSubmit","data","render","response","message","placement","duration","field","onChange","onBlur","value","required","username","password"],"sources":["D:/Dev/after-sale-mobile/src/views/Login/Login.tsx"],"sourcesContent":["import React, { useState, useEffect,useCallback } from \"react\";\r\nimport { useForm, Controller, SubmitHandler } from \"react-hook-form\";\r\nimport {\r\n  FormControl,\r\n  VStack,\r\n  Input,\r\n  Icon,\r\n  Button,\r\n  Text,\r\n  Center,\r\n  Box,\r\n  useToast,\r\n} from \"native-base\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nimport { useAuthLogin } from \"../../hooks/useLogin\";\r\nimport { IAuthLoginParams } from \"../../types/views/Login\";\r\n\r\nimport AppAlert from \"../../components/AppAlert\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport Logo from \"../../assets/toto.svg\";\r\n\r\nconst Login: React.FC = () => {\r\n  const toast = useToast();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IAuthLoginParams>();\r\n\r\n  const { isLoading, isError, error, status, mutate } = useAuthLogin();\r\n  const [show, setShow] = useState<boolean>(false);\r\n\r\n  const onSubmit: SubmitHandler<IAuthLoginParams> = useCallback((data) => {\r\n    mutate(data);\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    if (status === \"success\") {\r\n    } else if (status === \"error\") {\r\n      toast.show({\r\n        render: () => {\r\n          return (\r\n            <AppAlert text={error?.response?.data?.message} type=\"error\" />\r\n          );\r\n        },\r\n        placement: \"top\",\r\n        duration: 2000,\r\n      });\r\n    }\r\n\r\n    return () => {};\r\n  }, [status]);\r\n\r\n  return (\r\n    <Box flex={1} safeArea>\r\n      <LoadingScreen show={isLoading} />\r\n      <Center mt=\"10%\">\r\n        <Logo width={250} height={120} />\r\n      </Center>\r\n      <Box p={5}>\r\n        <VStack\r\n          space={5}\r\n          p={10}\r\n          backgroundColor=\"coolGray.200\"\r\n          borderRadius=\"xl\"\r\n        >\r\n          <Center>\r\n            <Text fontWeight=\"extrabold\" color=\"coolGray.700\">\r\n              AFTER SALE\r\n            </Text>\r\n          </Center>\r\n          <FormControl isRequired isInvalid={\"username\" in errors}>\r\n            <Controller\r\n              control={control}\r\n              render={({ field: { onChange, onBlur, value } }) => (\r\n                <Input\r\n                  InputLeftElement={\r\n                    <Icon as={<MaterialIcons name=\"person\" />} size=\"md\" />\r\n                  }\r\n                  variant=\"underlined\"\r\n                  p={2}\r\n                  placeholder=\"Username\"\r\n                  onBlur={onBlur}\r\n                  onChangeText={onChange}\r\n                  value={value}\r\n                />\r\n              )}\r\n              name=\"username\"\r\n              rules={{ required: \"Username is required\" }}\r\n              defaultValue=\"pakorn.wo\"\r\n            />\r\n            <FormControl.ErrorMessage>\r\n              {errors.username?.message}\r\n            </FormControl.ErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired isInvalid={\"password\" in errors}>\r\n            <Controller\r\n              control={control}\r\n              render={({ field: { onChange, onBlur, value } }) => (\r\n                <Input\r\n                  InputLeftElement={\r\n                    <Icon as={<MaterialIcons name=\"lock\" />} size=\"md\" />\r\n                  }\r\n                  variant=\"underlined\"\r\n                  p={2}\r\n                  type={show ? \"text\" : \"password\"}\r\n                  placeholder=\"Password\"\r\n                  InputRightElement={\r\n                    <Icon\r\n                      size=\"md\"\r\n                      color={show ? \"blue.500\" : \"coolGray.500\"}\r\n                      as={\r\n                        <MaterialIcons\r\n                          name={show ? \"visibility\" : \"visibility-off\"}\r\n                        />\r\n                      }\r\n                      onPress={() => setShow(!show)}\r\n                    />\r\n                  }\r\n                  onBlur={onBlur}\r\n                  onChangeText={onChange}\r\n                  value={value}\r\n                />\r\n              )}\r\n              name=\"password\"\r\n              rules={{ required: \"Password is required\" }}\r\n              defaultValue=\"1234\"\r\n            />\r\n\r\n            <FormControl.ErrorMessage>\r\n              {errors.password?.message}\r\n            </FormControl.ErrorMessage>\r\n          </FormControl>\r\n          <Button\r\n            leftIcon={<Icon as={<MaterialIcons name=\"login\" />} size=\"sm\" />}\r\n            onPress={handleSubmit(onSubmit)}\r\n            bgColor={'#14439c'}\r\n          >\r\n            SIGN IN\r\n          </Button>\r\n        </VStack>\r\n      </Box>\r\n      <Center flex={1}>\r\n        <Text>V 1.0</Text>\r\n      </Center>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}