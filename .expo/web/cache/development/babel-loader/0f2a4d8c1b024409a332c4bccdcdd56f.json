{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { httpClient } from \"../services/axios\";\nexport var useReceivePart = function useReceivePart() {\n  var getReceivePart = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(httpClient.get('/receive_part'));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return useQuery(\"ReceivePart\", function () {\n    return getReceivePart();\n  }, {\n    enabled: true,\n    refetchOnWindowFocus: true,\n    refetchOnMount: true\n  });\n};\nexport var useReceivePartItem = function useReceivePartItem(_ref) {\n  var Rec_ID = _ref.Rec_ID;\n\n  var getReceivePartItem = function _callee2(Rec_ID) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(httpClient.get(\"/receive_part_item?Rec_ID=\" + Rec_ID));\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return useQuery([\"ReceivePartItem\", Rec_ID], function () {\n    return getReceivePartItem(Rec_ID);\n  }, {\n    enabled: true\n  });\n};\nexport var useExecReceivePartTransactions = function useExecReceivePartTransactions() {\n  var queryClient = useQueryClient();\n\n  var execReceivePartTransactions = function _callee3(params) {\n    var data;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            data = new FormData();\n            Object.keys(params).forEach(function (value) {\n              data.append(value, params[value] || \"\");\n            });\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(httpClient.post(\"/exec_receive_part_transaction\", data));\n\n          case 4:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return useMutation(\"ExecReceivePartTransactions\", function (params) {\n    return execReceivePartTransactions(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('ReceivePartItem');\n    },\n    onError: function onError(error) {\n      var _error$response, _error$response$data;\n\n      console.log((error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || error.message);\n    }\n  });\n};\nexport var useUpdateReceivePart = function useUpdateReceivePart() {\n  var queryClient = useQueryClient();\n\n  var updateReceivePart = function _callee4(params) {\n    var data;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            data = new FormData();\n            Object.keys(params).forEach(function (value) {\n              data.append(value, params[value] || \"\");\n            });\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(httpClient.post(\"/update_receive_part\", data));\n\n          case 4:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return useMutation(\"UpdateReceivePart\", function (params) {\n    return updateReceivePart(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('ReceivePart');\n    },\n    onError: function onError(error) {\n      var _error$response2, _error$response2$data;\n\n      console.log((error == null ? void 0 : (_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || error.message);\n    }\n  });\n};","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","httpClient","useReceivePart","getReceivePart","get","enabled","refetchOnWindowFocus","refetchOnMount","useReceivePartItem","Rec_ID","getReceivePartItem","useExecReceivePartTransactions","queryClient","execReceivePartTransactions","params","data","FormData","Object","keys","forEach","value","append","post","onSuccess","response","invalidateQueries","onError","error","console","log","message","useUpdateReceivePart","updateReceivePart"],"sources":["D:/Dev/after-sale-mobile/src/hooks/useReceivePart.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport { httpClient } from \"../services/axios\";\r\n\r\nexport const useReceivePart = () => {\r\n  const getReceivePart = async () => {\r\n    return await httpClient.get('/receive_part');\r\n  };\r\n  return useQuery(\r\n    \"ReceivePart\",\r\n    () => getReceivePart(),\r\n    {\r\n      enabled: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      //staleTime: 30000, // not to refresh the data from API is 30 seconds\r\n    }\r\n  );\r\n};\r\n\r\nexport const useReceivePartItem = ({Rec_ID}: any) => {\r\n\r\n  const getReceivePartItem = async (Rec_ID: any) => {\r\n    \r\n    return await httpClient.get(`/receive_part_item?Rec_ID=${Rec_ID}`);\r\n  };\r\n  return useQuery<any, any, any>(\r\n    [\"ReceivePartItem\", Rec_ID],\r\n    () => getReceivePartItem(Rec_ID),\r\n    {\r\n      enabled: true,\r\n    }\r\n  );\r\n};\r\n\r\nexport const useExecReceivePartTransactions = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const execReceivePartTransactions = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/exec_receive_part_transaction\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"ExecReceivePartTransactions\",\r\n    (params) => execReceivePartTransactions(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('ReceivePartItem');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const useUpdateReceivePart = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const updateReceivePart = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/update_receive_part\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"UpdateReceivePart\",\r\n    (params) => updateReceivePart(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('ReceivePart');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}