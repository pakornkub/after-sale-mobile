{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Box, Input, Select, Icon, VStack, Button, useToast, FormControl, Text, HStack } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { DataTable } from \"react-native-paper\";\nimport { getDataFromQR } from \"../../utils/qr\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport AppScanner from \"../../components/AppScanner\";\nimport AppAlert from \"../../components/AppAlert\";\nimport AppAlertDialog from \"../../components/AppAlertDialog\";\nimport AlertDialogSemi from \"../../components/AlertDialogSemi\";\nimport { useJobRepack, useJobRepackBOM, useUpdateJobRepack, useExecJobRepackTransactions, useExecJobRepackItem } from \"../../hooks/useJobRepack\";\nimport { styles } from \"../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar JobRepack = function JobRepack() {\n  var _orderData$data2, _orderData$data2$data, _bomData$data3, _bomData$data3$data;\n\n  var initOrder = {};\n  var initItem = {\n    QR_NO: \"\",\n    Tag_ID: \"\",\n    Item_ID: \"\",\n    Series: \"\"\n  };\n  var initBox = {\n    QR_NO_BOX: \"\"\n  };\n  var initErrors = {};\n  var toast = useToast();\n  var queryClient = useQueryClient();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      camera = _useState2[0],\n      setCamera = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      camera2 = _useState4[0],\n      setCamera2 = _useState4[1];\n\n  var _useState5 = useState(initOrder),\n      _useState6 = _slicedToArray(_useState5, 2),\n      order = _useState6[0],\n      setOrder = _useState6[1];\n\n  var _useState7 = useState(initItem),\n      _useState8 = _slicedToArray(_useState7, 2),\n      item = _useState8[0],\n      setItem = _useState8[1];\n\n  var _useState9 = useState(initBox),\n      _useState10 = _slicedToArray(_useState9, 2),\n      box = _useState10[0],\n      setBox = _useState10[1];\n\n  var _useState11 = useState(initErrors),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errors = _useState12[0],\n      setErrors = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      disabledButton = _useState14[0],\n      setDisabledButton = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      disabledItem = _useState16[0],\n      setDisabledItem = _useState16[1];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      disabledBox = _useState18[0],\n      setDisabledBox = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isOpenAlertDialog = _useState20[0],\n      setIsOpenAlertDialog = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      isOpenAlertDialogSemi = _useState22[0],\n      setIsOpenAlertDialogSemi = _useState22[1];\n\n  var refInput = useRef(null);\n  var refInputBox = useRef(null);\n  var refScanner = useRef(false);\n  var refScannerBox = useRef(false);\n\n  var _useJobRepack = useJobRepack(),\n      orderIsLoading = _useJobRepack.isLoading,\n      isFetching = _useJobRepack.isFetching,\n      isError = _useJobRepack.isError,\n      orderData = _useJobRepack.data,\n      orderRefetch = _useJobRepack.refetch,\n      status = _useJobRepack.status,\n      error = _useJobRepack.error;\n\n  var _useJobRepackBOM = useJobRepackBOM({\n    JOB_ID: (order == null ? void 0 : order.JOB_ID) || \"\"\n  }),\n      bomIsLoading = _useJobRepackBOM.isLoading,\n      bomData = _useJobRepackBOM.data,\n      bomRefetch = _useJobRepackBOM.refetch;\n\n  var _useExecJobRepackItem = useExecJobRepackItem(),\n      itemIsLoading = _useExecJobRepackItem.isLoading,\n      itemIsError = _useExecJobRepackItem.isError,\n      itemStatus = _useExecJobRepackItem.status,\n      itemError = _useExecJobRepackItem.error,\n      itemMutate = _useExecJobRepackItem.mutate,\n      itemData = _useExecJobRepackItem.data;\n\n  var _useExecJobRepackTran = useExecJobRepackTransactions(),\n      transIsLoading = _useExecJobRepackTran.isLoading,\n      transIsError = _useExecJobRepackTran.isError,\n      transStatus = _useExecJobRepackTran.status,\n      transError = _useExecJobRepackTran.error,\n      transMutate = _useExecJobRepackTran.mutate,\n      transData = _useExecJobRepackTran.data;\n\n  var _useUpdateJobRepack = useUpdateJobRepack(),\n      updateIsLoading = _useUpdateJobRepack.isLoading,\n      updateIsError = _useUpdateJobRepack.isError,\n      updateStatus = _useUpdateJobRepack.status,\n      updateError = _useUpdateJobRepack.error,\n      updateMutate = _useUpdateJobRepack.mutate,\n      updateData = _useUpdateJobRepack.data;\n\n  var handleChangeOrder = function handleChangeOrder(value) {\n    var _orderData$data, _jobOrder$filter$;\n\n    if (!value) {\n      return;\n    }\n\n    clearState(\"Error\");\n    var job = value.split(\"|\");\n\n    var jobOrder = _toConsumableArray(orderData == null ? void 0 : (_orderData$data = orderData.data) == null ? void 0 : _orderData$data.data);\n\n    var BOX_QTY = ((_jobOrder$filter$ = jobOrder.filter(function (value) {\n      return value.JOB_ID === parseInt(job[0]);\n    })[0]) == null ? void 0 : _jobOrder$filter$.BOX_QTY) || 0;\n    setOrder(_objectSpread(_objectSpread({}, order), {}, {\n      JOB: value,\n      JOB_ID: job[0],\n      JOB_QTY: parseInt(job[1]),\n      BOX_QTY: parseInt(BOX_QTY)\n    }));\n  };\n\n  var handleScanner = function handleScanner(value) {\n    setCamera(false);\n\n    if (!value) {\n      return;\n    }\n\n    clearState(\"Error\");\n    var qr = getDataFromQR(value);\n\n    if (qr != null && qr.ITEM_CODE) {\n      setItem(_objectSpread(_objectSpread({}, item), {}, {\n        Item_Code: (qr == null ? void 0 : qr.ITEM_CODE) || \"\"\n      }));\n    } else {\n      setItem(_objectSpread(_objectSpread({}, item), {}, {\n        QR_NO: (qr == null ? void 0 : qr.QR_NO) || \"\",\n        Tag_ID: (qr == null ? void 0 : qr.Tag_ID) || \"\",\n        Item_ID: (qr == null ? void 0 : qr.Item_ID) || \"\",\n        Series: (qr == null ? void 0 : qr.Series) || \"\"\n      }));\n    }\n\n    refScanner.current = true;\n  };\n\n  var handleScannerBox = function handleScannerBox(value) {\n    setCamera2(false);\n\n    if (!value) {\n      return;\n    }\n\n    clearState(\"Error\");\n    var qr = getDataFromQR(value);\n    setBox(_objectSpread(_objectSpread({}, box), {}, {\n      QR_NO_BOX: (qr == null ? void 0 : qr.QR_NO) || \"\"\n    }));\n    refScannerBox.current = true;\n  };\n\n  var handleAlertDialog = function handleAlertDialog() {\n    if (parseInt((order == null ? void 0 : order.JOB_QTY) || 0) !== parseInt((order == null ? void 0 : order.BOX_QTY) || 0) && parseInt((order == null ? void 0 : order.JOB_QTY) || 0) > 0 && parseInt((order == null ? void 0 : order.BOX_QTY) || 0) !== 0) {\n      setIsOpenAlertDialog(true);\n    } else {\n      handleSubmit();\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    updateMutate(order);\n  };\n\n  var handleScannerSubmit = function handleScannerSubmit() {\n    itemMutate(_objectSpread(_objectSpread({}, order), item));\n  };\n\n  var calculateItem = function calculateItem() {\n    var _bomData$data, _bomData$data$data, _bomData$data2, _bomData$data2$data;\n\n    var sumBOM = (bomData == null ? void 0 : (_bomData$data = bomData.data) == null ? void 0 : (_bomData$data$data = _bomData$data.data) == null ? void 0 : _bomData$data$data.reduce(function (previousValue, currentValue) {\n      return previousValue + parseInt(currentValue.BOM);\n    }, 0)) || 0;\n    var sumActual = (bomData == null ? void 0 : (_bomData$data2 = bomData.data) == null ? void 0 : (_bomData$data2$data = _bomData$data2.data) == null ? void 0 : _bomData$data2$data.reduce(function (previousValue, currentValue) {\n      return previousValue + parseInt(currentValue.Actual);\n    }, 0)) || 0;\n\n    if (parseInt(sumActual) === parseInt(sumBOM) && parseInt(sumActual) !== 0) {\n      setDisabledItem(true);\n      setDisabledBox(false);\n    } else {\n      setDisabledItem(false);\n      setDisabledBox(true);\n    }\n  };\n\n  var calculateBox = function calculateBox() {\n    if (parseInt((order == null ? void 0 : order.JOB_QTY) || 0) === parseInt((order == null ? void 0 : order.BOX_QTY) || 0) && parseInt((order == null ? void 0 : order.BOX_QTY) || 0) !== 0) {\n      setDisabledItem(true);\n      setDisabledBox(true);\n      setDisabledButton(false);\n    } else if (parseInt((order == null ? void 0 : order.JOB_QTY) || 0) > 0 && parseInt((order == null ? void 0 : order.BOX_QTY) || 0) !== 0) {\n      setDisabledButton(false);\n    }\n  };\n\n  var validateErrors = function validateErrors(QRType) {\n    refScanner.current = false;\n    refScannerBox.current = false;\n\n    if (!order.JOB_ID) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        JOB_ID: \"Repack Order is required\"\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    if (bomData.data.data.filter(function (value) {\n      if (item != null && item.Item_Code) return value.SP === item.Item_Code && parseInt(value.Actual) === parseInt(value.BOM);else return parseInt(value.Item_ID) === parseInt(item.Item_ID) && parseInt(value.Actual) === parseInt(value.BOM);\n    }).length > 0) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        QR_NO: \"This Item Actual Completed\"\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    if (QRType === \"Item\") {\n      if (item != null && item.Item_Code) {\n        if (!item.Item_Code) {\n          setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n            QR_NO: \"Invalid QR format Miscellaneous\"\n          }));\n          clearState(\"Item\");\n          return false;\n        }\n      } else {\n        if (!item.QR_NO || !item.Tag_ID) {\n          setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n            QR_NO: \"Invalid QR format\"\n          }));\n          clearState(\"Item\");\n          return false;\n        }\n      }\n    } else if (QRType === \"Box\") {\n      if (!box.QR_NO_BOX) {\n        setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n          QR_NO_BOX: \"Invalid QR BOX format\"\n        }));\n        clearState(\"Box\");\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var clearState = function clearState(type) {\n    if (type === \"All\") {\n      setOrder(initOrder);\n      setItem(initItem);\n      setBox(initBox);\n      setErrors(initErrors);\n      setDisabledButton(true);\n    } else if (type === \"Item\") {\n      setItem(initItem);\n    } else if (type === \"Box\") {\n      setBox(initBox);\n    } else if (type === \"Order\") {\n      setOrder(initOrder);\n    } else {\n      setErrors(initErrors);\n    }\n  };\n\n  useEffect(function () {\n    bomRefetch();\n  }, [order]);\n  useEffect(function () {\n    if (refScanner.current && validateErrors(\"Item\")) {\n      if (item.Series) {\n        setIsOpenAlertDialogSemi(true);\n      } else {\n        handleScannerSubmit();\n      }\n    }\n  }, [item]);\n  useEffect(function () {\n    if (refScannerBox.current && validateErrors(\"Box\")) {\n      transMutate(_objectSpread(_objectSpread({}, order), box));\n    }\n  }, [box]);\n  useEffect(function () {\n    handleChangeOrder(order.JOB);\n  }, [orderData]);\n  useEffect(function () {\n    calculateItem();\n    calculateBox();\n  }, [bomData]);\n  useEffect(function () {\n    if (itemStatus === \"success\") {\n      toast.show({\n        render: function render() {\n          var _itemData$data;\n\n          return _jsx(AppAlert, {\n            text: (itemData == null ? void 0 : (_itemData$data = itemData.data) == null ? void 0 : _itemData$data.message) || \"success\",\n            type: \"success\"\n          });\n        },\n        placement: \"top\",\n        duration: 2000\n      });\n    } else if (itemStatus === \"error\") {\n      toast.show({\n        render: function render() {\n          var _itemError$response, _itemError$response$d;\n\n          return _jsx(AppAlert, {\n            text: (itemError == null ? void 0 : (_itemError$response = itemError.response) == null ? void 0 : (_itemError$response$d = _itemError$response.data) == null ? void 0 : _itemError$response$d.message) || \"error\",\n            type: \"error\"\n          });\n        },\n        placement: \"top\",\n        duration: 3000\n      });\n    }\n\n    return function () {\n      refScanner.current = false;\n      clearState(\"Item\");\n    };\n  }, [itemStatus]);\n  useEffect(function () {\n    if (transStatus === \"success\") {\n      toast.show({\n        render: function render() {\n          var _transData$data;\n\n          return _jsx(AppAlert, {\n            text: (transData == null ? void 0 : (_transData$data = transData.data) == null ? void 0 : _transData$data.message) || \"success\",\n            type: \"success\"\n          });\n        },\n        placement: \"top\",\n        duration: 2000\n      });\n    } else if (transStatus === \"error\") {\n      toast.show({\n        render: function render() {\n          var _transError$response, _transError$response$;\n\n          return _jsx(AppAlert, {\n            text: (transError == null ? void 0 : (_transError$response = transError.response) == null ? void 0 : (_transError$response$ = _transError$response.data) == null ? void 0 : _transError$response$.message) || \"error\",\n            type: \"error\"\n          });\n        },\n        placement: \"top\",\n        duration: 3000\n      });\n    }\n\n    return function () {\n      refScannerBox.current = false;\n      clearState(\"Box\");\n    };\n  }, [transStatus]);\n  useEffect(function () {\n    if (updateStatus === \"success\") {\n      toast.show({\n        render: function render() {\n          var _updateData$data;\n\n          return _jsx(AppAlert, {\n            text: (updateData == null ? void 0 : (_updateData$data = updateData.data) == null ? void 0 : _updateData$data.message) || \"success\",\n            type: \"success\"\n          });\n        },\n        placement: \"top\",\n        duration: 2000\n      });\n      clearState(\"All\");\n    } else if (updateStatus === \"error\") {\n      toast.show({\n        render: function render() {\n          var _updateError$response, _updateError$response2;\n\n          return _jsx(AppAlert, {\n            text: (updateError == null ? void 0 : (_updateError$response = updateError.response) == null ? void 0 : (_updateError$response2 = _updateError$response.data) == null ? void 0 : _updateError$response2.message) || \"error\",\n            type: \"error\"\n          });\n        },\n        placement: \"top\",\n        duration: 3000\n      });\n    }\n\n    return function () {\n      refScanner.current = false;\n      refScannerBox.current = false;\n    };\n  }, [updateStatus]);\n  useEffect(function () {\n    var _refInput$current, _refInputBox$current;\n\n    refInput == null ? void 0 : (_refInput$current = refInput.current) == null ? void 0 : _refInput$current.focus();\n    refInputBox == null ? void 0 : (_refInputBox$current = refInputBox.current) == null ? void 0 : _refInputBox$current.focus();\n  });\n  useEffect(function () {\n    return function () {\n      clearState(\"All\");\n      queryClient.clear();\n    };\n  }, []);\n  return _jsx(_Fragment, {\n    children: !camera && !camera2 ? _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      accessible: false,\n      children: _jsxs(Box, {\n        flex: 1,\n        children: [_jsx(LoadingScreen, {\n          show: itemIsLoading || updateIsLoading || transIsLoading\n        }), _jsxs(VStack, {\n          space: 5,\n          p: 5,\n          children: [_jsxs(FormControl, {\n            isRequired: true,\n            isInvalid: \"JOB_ID\" in errors,\n            children: [_jsx(Select, {\n              h: 50,\n              size: 20,\n              width: \"100%\",\n              accessibilityLabel: \"Choose Service\",\n              placeholder: \"REPACK ORDER NO.\",\n              selectedValue: order.JOB || \"\",\n              onValueChange: function onValueChange(value) {\n                return handleChangeOrder(value);\n              },\n              children: orderData == null ? void 0 : (_orderData$data2 = orderData.data) == null ? void 0 : (_orderData$data2$data = _orderData$data2.data) == null ? void 0 : _orderData$data2$data.map(function (value) {\n                return _jsx(Select.Item, {\n                  label: value.JOB_No,\n                  value: value.JOB_ID + \"|\" + value.JOB_QTY\n                }, value.JOB_ID);\n              })\n            }), \"JOB_ID\" in errors && _jsx(FormControl.ErrorMessage, {\n              children: errors.JOB_ID\n            })]\n          }), _jsxs(FormControl, {\n            isRequired: true,\n            isInvalid: \"QR_NO\" in errors,\n            children: [_jsx(Input, {\n              h: 50,\n              size: 20,\n              ref: refInput,\n              showSoftInputOnFocus: false,\n              variant: \"underlined\",\n              p: 2,\n              placeholder: \"SCAN QR PART\",\n              isDisabled: disabledItem,\n              InputRightElement: _jsx(Icon, {\n                size: 35,\n                color: \"primary.600\",\n                as: _jsx(MaterialIcons, {\n                  name: \"qr-code-scanner\"\n                }),\n                onPress: function onPress() {\n                  return setCamera(true);\n                },\n                disabled: disabledItem\n              }),\n              autoFocus: true,\n              value: \"\",\n              onChangeText: function onChangeText(value) {\n                return handleScanner(value);\n              }\n            }), \"QR_NO\" in errors && _jsx(FormControl.ErrorMessage, {\n              children: errors.QR_NO\n            })]\n          }), _jsx(ScrollView, {\n            keyboardShouldPersistTaps: \"handled\",\n            style: {\n              height: \"45%\"\n            },\n            refreshControl: _jsx(RefreshControl, {\n              refreshing: bomIsLoading,\n              onRefresh: function onRefresh() {\n                return orderRefetch();\n              }\n            }),\n            children: _jsx(TouchableOpacity, {\n              activeOpacity: 1,\n              children: _jsxs(DataTable, {\n                children: [_jsxs(DataTable.Header, {\n                  children: [_jsx(DataTable.Title, {\n                    style: styles.table_title_10,\n                    children: _jsx(Text, {\n                      bold: true,\n                      children: \"NO.\"\n                    })\n                  }), _jsx(DataTable.Title, {\n                    style: styles.table_title_54,\n                    children: _jsx(Text, {\n                      bold: true,\n                      children: \"PART\"\n                    })\n                  }), _jsx(DataTable.Title, {\n                    numeric: true,\n                    style: styles.table_title_18,\n                    children: _jsx(Text, {\n                      bold: true,\n                      children: \"ACT\"\n                    })\n                  }), _jsx(DataTable.Title, {\n                    numeric: true,\n                    style: styles.table_title_18,\n                    children: _jsx(Text, {\n                      bold: true,\n                      children: \"BOM\"\n                    })\n                  })]\n                }), (bomData == null ? void 0 : (_bomData$data3 = bomData.data) == null ? void 0 : (_bomData$data3$data = _bomData$data3.data) == null ? void 0 : _bomData$data3$data.map(function (value, key) {\n                  return _jsxs(DataTable.Row, {\n                    children: [_jsx(DataTable.Title, {\n                      style: styles.table_title_10,\n                      children: value.No\n                    }), _jsx(DataTable.Cell, {\n                      style: styles.table_title_54,\n                      children: _jsx(Text, {\n                        color: value.Product_ID === 3 ? \"indigo.500\" : value.Product_ID === 4 ? \"blue.500\" : \"black\",\n                        children: value.SP\n                      })\n                    }), _jsx(DataTable.Cell, {\n                      numeric: true,\n                      style: styles.table_title_18,\n                      children: _jsx(Text, {\n                        bold: true,\n                        color: \"red.600\",\n                        children: value.Actual\n                      })\n                    }), _jsx(DataTable.Cell, {\n                      numeric: true,\n                      style: styles.table_title_18,\n                      children: value.BOM\n                    })]\n                  }, key);\n                })) || _jsx(DataTable.Row, {\n                  children: _jsx(DataTable.Title, {\n                    children: \"No Data\"\n                  })\n                })]\n              })\n            })\n          }), _jsxs(HStack, {\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [_jsxs(FormControl, {\n              w: \"50%\",\n              isRequired: true,\n              isInvalid: \"QR_NO_BOX\" in errors,\n              isDisabled: disabledBox,\n              children: [_jsx(Input, {\n                h: 50,\n                size: 20,\n                ref: refInputBox,\n                showSoftInputOnFocus: false,\n                variant: \"underlined\",\n                p: 2,\n                placeholder: \"QR BOX\",\n                InputRightElement: _jsx(Icon, {\n                  size: 35,\n                  color: \"primary.600\",\n                  as: _jsx(MaterialIcons, {\n                    name: \"qr-code-scanner\"\n                  }),\n                  onPress: function onPress() {\n                    return setCamera2(true);\n                  },\n                  disabled: disabledBox\n                }),\n                value: (box == null ? void 0 : box.QR_NO_BOX) || \"\",\n                onChangeText: function onChangeText(value) {\n                  return handleScannerBox(value);\n                }\n              }), \"QR_NO_BOX\" in errors && _jsx(FormControl.ErrorMessage, {\n                children: errors.QR_NO_BOX\n              })]\n            }), _jsxs(Text, {\n              fontSize: 25,\n              children: [_jsx(Text, {\n                bold: true,\n                color: \"green.600\",\n                children: \"\" + ((order == null ? void 0 : order.BOX_QTY) || 0)\n              }), \" / \" + ((order == null ? void 0 : order.JOB_QTY) || 0) + \" BOX\"]\n            })]\n          }), _jsx(Button, {\n            backgroundColor: \"green.600\",\n            leftIcon: _jsx(Icon, {\n              as: _jsx(MaterialIcons, {\n                name: \"check\"\n              }),\n              size: \"sm\"\n            }),\n            isDisabled: disabledButton,\n            onPress: handleAlertDialog,\n            children: \"SAVE\"\n          })]\n        }), _jsx(AppAlertDialog, {\n          isOpenAlertDialog: isOpenAlertDialog,\n          setIsOpenAlertDialog: setIsOpenAlertDialog,\n          handleSubmit: handleSubmit\n        }), _jsx(AlertDialogSemi, {\n          itemSemi: item,\n          isOpenAlertDialogSemi: isOpenAlertDialogSemi,\n          setIsOpenAlertDialogSemi: setIsOpenAlertDialogSemi,\n          handleScannerSubmit: handleScannerSubmit\n        })]\n      })\n    }) : !camera2 ? _jsx(AppScanner, {\n      handleScanner: handleScanner\n    }) : _jsx(AppScanner, {\n      handleScanner: handleScannerBox\n    })\n  });\n};\n\nexport default JobRepack;","map":{"version":3,"names":["React","useState","useEffect","useRef","useQueryClient","Box","Input","Select","Icon","VStack","Button","useToast","FormControl","Text","HStack","MaterialIcons","DataTable","getDataFromQR","LoadingScreen","AppScanner","AppAlert","AppAlertDialog","AlertDialogSemi","useJobRepack","useJobRepackBOM","useUpdateJobRepack","useExecJobRepackTransactions","useExecJobRepackItem","styles","JobRepack","initOrder","initItem","QR_NO","Tag_ID","Item_ID","Series","initBox","QR_NO_BOX","initErrors","toast","queryClient","camera","setCamera","camera2","setCamera2","order","setOrder","item","setItem","box","setBox","errors","setErrors","disabledButton","setDisabledButton","disabledItem","setDisabledItem","disabledBox","setDisabledBox","isOpenAlertDialog","setIsOpenAlertDialog","isOpenAlertDialogSemi","setIsOpenAlertDialogSemi","refInput","refInputBox","refScanner","refScannerBox","orderIsLoading","isLoading","isFetching","isError","orderData","data","orderRefetch","refetch","status","error","JOB_ID","bomIsLoading","bomData","bomRefetch","itemIsLoading","itemIsError","itemStatus","itemError","itemMutate","mutate","itemData","transIsLoading","transIsError","transStatus","transError","transMutate","transData","updateIsLoading","updateIsError","updateStatus","updateError","updateMutate","updateData","handleChangeOrder","value","clearState","job","split","jobOrder","BOX_QTY","filter","parseInt","JOB","JOB_QTY","handleScanner","qr","ITEM_CODE","Item_Code","current","handleScannerBox","handleAlertDialog","handleSubmit","handleScannerSubmit","calculateItem","sumBOM","reduce","previousValue","currentValue","BOM","sumActual","Actual","calculateBox","validateErrors","QRType","SP","length","type","show","render","message","placement","duration","response","focus","clear","Keyboard","dismiss","map","JOB_No","height","table_title_10","table_title_54","table_title_18","key","No","Product_ID"],"sources":["D:/Dev/after-sale-mobile/src/views/JobRepack/JobRepack.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport {\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  RefreshControl,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  Box,\r\n  Input,\r\n  Select,\r\n  Icon,\r\n  VStack,\r\n  Button,\r\n  useToast,\r\n  FormControl,\r\n  Text,\r\n  HStack,\r\n  AlertDialog,\r\n} from \"native-base\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { DataTable } from \"react-native-paper\";\r\n\r\nimport { getDataFromQR } from \"../../utils/qr\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport AppScanner from \"../../components/AppScanner\";\r\nimport AppAlert from \"../../components/AppAlert\";\r\nimport AppAlertDialog from \"../../components/AppAlertDialog\";\r\nimport AlertDialogSemi from \"../../components/AlertDialogSemi\";\r\n\r\nimport {\r\n  useJobRepack,\r\n  useJobRepackBOM,\r\n  useUpdateJobRepack,\r\n  useExecJobRepackTransactions,\r\n  useExecJobRepackItem,\r\n} from \"../../hooks/useJobRepack\";\r\n\r\nimport { styles } from \"../styles\";\r\n\r\nconst JobRepack: React.FC = () => {\r\n  const initOrder = {};\r\n  const initItem = { QR_NO: \"\", Tag_ID: \"\", Item_ID: \"\", Series: \"\" };\r\n  const initBox = { QR_NO_BOX: \"\" };\r\n  const initErrors = {};\r\n\r\n  const toast = useToast();\r\n  const queryClient = useQueryClient();\r\n\r\n  const [camera, setCamera] = useState<boolean>(false);\r\n  const [camera2, setCamera2] = useState<boolean>(false);\r\n\r\n  const [order, setOrder] = useState<any>(initOrder);\r\n  const [item, setItem] = useState<any>(initItem);\r\n  const [box, setBox] = useState<any>(initBox);\r\n  const [errors, setErrors] = useState<any>(initErrors);\r\n\r\n  const [disabledButton, setDisabledButton] = useState<boolean>(true);\r\n  const [disabledItem, setDisabledItem] = useState<boolean>(false);\r\n  const [disabledBox, setDisabledBox] = useState<boolean>(true);\r\n\r\n  const [isOpenAlertDialog, setIsOpenAlertDialog] = useState(false);\r\n  const [isOpenAlertDialogSemi, setIsOpenAlertDialogSemi] = useState(false);\r\n\r\n  const refInput = useRef<any>(null);\r\n  const refInputBox = useRef<any>(null);\r\n  const refScanner = useRef<boolean>(false);\r\n  const refScannerBox = useRef<boolean>(false);\r\n\r\n  const {\r\n    isLoading: orderIsLoading,\r\n    isFetching,\r\n    isError,\r\n    data: orderData,\r\n    refetch: orderRefetch,\r\n    status,\r\n    error,\r\n  } = useJobRepack();\r\n\r\n  const {\r\n    isLoading: bomIsLoading,\r\n    data: bomData,\r\n    refetch: bomRefetch,\r\n  } = useJobRepackBOM({\r\n    JOB_ID: order?.JOB_ID || \"\",\r\n  });\r\n\r\n  const {\r\n    isLoading: itemIsLoading,\r\n    isError: itemIsError,\r\n    status: itemStatus,\r\n    error: itemError,\r\n    mutate: itemMutate,\r\n    data: itemData,\r\n  } = useExecJobRepackItem();\r\n\r\n  const {\r\n    isLoading: transIsLoading,\r\n    isError: transIsError,\r\n    status: transStatus,\r\n    error: transError,\r\n    mutate: transMutate,\r\n    data: transData,\r\n  } = useExecJobRepackTransactions();\r\n\r\n  const {\r\n    isLoading: updateIsLoading,\r\n    isError: updateIsError,\r\n    status: updateStatus,\r\n    error: updateError,\r\n    mutate: updateMutate,\r\n    data: updateData,\r\n  } = useUpdateJobRepack();\r\n\r\n  const handleChangeOrder = (value: string) => {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    clearState(\"Error\");\r\n\r\n    let job = value.split(\"|\");\r\n\r\n    let jobOrder = [...orderData?.data?.data];\r\n\r\n    let BOX_QTY =\r\n      jobOrder.filter((value: any) => {\r\n        return value.JOB_ID === parseInt(job[0]);\r\n      })[0]?.BOX_QTY || 0;\r\n\r\n    setOrder({\r\n      ...order,\r\n      JOB: value,\r\n      JOB_ID: job[0],\r\n      JOB_QTY: parseInt(job[1]),\r\n      BOX_QTY: parseInt(BOX_QTY),\r\n    });\r\n  };\r\n\r\n  const handleScanner = (value: any) => {\r\n    setCamera(false);\r\n\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    clearState(\"Error\");\r\n\r\n    const qr = getDataFromQR(value);\r\n\r\n    if (qr?.ITEM_CODE) {\r\n      setItem({\r\n        ...item,\r\n        Item_Code: qr?.ITEM_CODE || \"\",\r\n      });\r\n    } else {\r\n      setItem({\r\n        ...item,\r\n        QR_NO: qr?.QR_NO || \"\",\r\n        Tag_ID: qr?.Tag_ID || \"\",\r\n        Item_ID: qr?.Item_ID || \"\",\r\n        Series: qr?.Series || \"\",\r\n      });\r\n    }\r\n\r\n    refScanner.current = true;\r\n  };\r\n\r\n  const handleScannerBox = (value: any) => {\r\n    setCamera2(false);\r\n\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    clearState(\"Error\");\r\n\r\n    const qr = getDataFromQR(value);\r\n\r\n    setBox({ ...box, QR_NO_BOX: qr?.QR_NO || \"\" });\r\n\r\n    refScannerBox.current = true;\r\n  };\r\n\r\n  const handleAlertDialog = () => {\r\n    if (\r\n      parseInt(order?.JOB_QTY || 0) !== parseInt(order?.BOX_QTY || 0) &&\r\n      parseInt(order?.JOB_QTY || 0) > 0 &&\r\n      parseInt(order?.BOX_QTY || 0) !== 0\r\n    ) {\r\n      setIsOpenAlertDialog(true);\r\n    } else {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    updateMutate(order);\r\n  };\r\n\r\n  const handleScannerSubmit = () => {\r\n    itemMutate({ ...order, ...item });\r\n  };\r\n\r\n  const calculateItem = () => {\r\n    const sumBOM =\r\n      bomData?.data?.data?.reduce((previousValue: any, currentValue: any) => {\r\n        return previousValue + parseInt(currentValue.BOM);\r\n      }, 0) || 0;\r\n\r\n    const sumActual =\r\n      bomData?.data?.data?.reduce((previousValue: any, currentValue: any) => {\r\n        return previousValue + parseInt(currentValue.Actual);\r\n      }, 0) || 0;\r\n\r\n    if (parseInt(sumActual) === parseInt(sumBOM) && parseInt(sumActual) !== 0) {\r\n      setDisabledItem(true);\r\n      setDisabledBox(false);\r\n    } else {\r\n      setDisabledItem(false);\r\n      setDisabledBox(true);\r\n    }\r\n  };\r\n\r\n  const calculateBox = () => {\r\n    if (\r\n      parseInt(order?.JOB_QTY || 0) === parseInt(order?.BOX_QTY || 0) &&\r\n      parseInt(order?.BOX_QTY || 0) !== 0\r\n    ) {\r\n      setDisabledItem(true);\r\n      setDisabledBox(true);\r\n      setDisabledButton(false);\r\n    } else if (\r\n      parseInt(order?.JOB_QTY || 0) > 0 &&\r\n      parseInt(order?.BOX_QTY || 0) !== 0\r\n    ) {\r\n      setDisabledButton(false);\r\n    }\r\n  };\r\n\r\n  const validateErrors = (QRType: string) => {\r\n    refScanner.current = false;\r\n    refScannerBox.current = false;\r\n\r\n    if (!order.JOB_ID) {\r\n      setErrors({ ...errors, JOB_ID: \"Repack Order is required\" });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      bomData.data.data.filter((value: any) => {\r\n        if (item?.Item_Code)\r\n          return (\r\n            value.SP === item.Item_Code &&\r\n            parseInt(value.Actual) === parseInt(value.BOM)\r\n          );\r\n        else\r\n          return (\r\n            parseInt(value.Item_ID) === parseInt(item.Item_ID) &&\r\n            parseInt(value.Actual) === parseInt(value.BOM)\r\n          );\r\n      }).length > 0\r\n    ) {\r\n      setErrors({ ...errors, QR_NO: \"This Item Actual Completed\" });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    if (QRType === \"Item\") {\r\n      if (item?.Item_Code) {\r\n        if (!item.Item_Code) {\r\n          setErrors({ ...errors, QR_NO: \"Invalid QR format Miscellaneous\" });\r\n          clearState(\"Item\");\r\n          return false;\r\n        }\r\n      } else {\r\n        if (!item.QR_NO || !item.Tag_ID) {\r\n          setErrors({ ...errors, QR_NO: \"Invalid QR format\" });\r\n          clearState(\"Item\");\r\n          return false;\r\n        }\r\n      }\r\n    } else if (QRType === \"Box\") {\r\n      if (!box.QR_NO_BOX) {\r\n        setErrors({ ...errors, QR_NO_BOX: \"Invalid QR BOX format\" });\r\n        clearState(\"Box\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const clearState = (type: string) => {\r\n    if (type === \"All\") {\r\n      setOrder(initOrder);\r\n      setItem(initItem);\r\n      setBox(initBox);\r\n      setErrors(initErrors);\r\n      setDisabledButton(true);\r\n    } else if (type === \"Item\") {\r\n      setItem(initItem);\r\n    } else if (type === \"Box\") {\r\n      setBox(initBox);\r\n    } else if (type === \"Order\") {\r\n      setOrder(initOrder);\r\n    } else {\r\n      setErrors(initErrors);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    bomRefetch();\r\n  }, [order]);\r\n\r\n  useEffect(() => {\r\n    if (refScanner.current && validateErrors(\"Item\")) {\r\n      if (item.Series) {\r\n        setIsOpenAlertDialogSemi(true);\r\n      } else {\r\n        handleScannerSubmit();\r\n      }\r\n    }\r\n  }, [item]);\r\n\r\n  useEffect(() => {\r\n    if (refScannerBox.current && validateErrors(\"Box\")) {\r\n      transMutate({ ...order, ...box });\r\n    }\r\n  }, [box]);\r\n\r\n  useEffect(() => {\r\n    handleChangeOrder(order.JOB);\r\n  }, [orderData]);\r\n\r\n  useEffect(() => {\r\n    calculateItem();\r\n    calculateBox();\r\n  }, [bomData]);\r\n\r\n  useEffect(() => {\r\n    if (itemStatus === \"success\") {\r\n      toast.show({\r\n        render: () => (\r\n          <AppAlert\r\n            text={itemData?.data?.message || \"success\"}\r\n            type=\"success\"\r\n          />\r\n        ),\r\n        placement: \"top\",\r\n        duration: 2000,\r\n      });\r\n    } else if (itemStatus === \"error\") {\r\n      toast.show({\r\n        render: () => (\r\n          <AppAlert\r\n            text={itemError?.response?.data?.message || \"error\"}\r\n            type=\"error\"\r\n          />\r\n        ),\r\n        placement: \"top\",\r\n        duration: 3000,\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      refScanner.current = false;\r\n      clearState(\"Item\");\r\n    };\r\n  }, [itemStatus]);\r\n\r\n  useEffect(() => {\r\n    if (transStatus === \"success\") {\r\n      toast.show({\r\n        render: () => (\r\n          <AppAlert\r\n            text={transData?.data?.message || \"success\"}\r\n            type=\"success\"\r\n          />\r\n        ),\r\n        placement: \"top\",\r\n        duration: 2000,\r\n      });\r\n    } else if (transStatus === \"error\") {\r\n      toast.show({\r\n        render: () => (\r\n          <AppAlert\r\n            text={transError?.response?.data?.message || \"error\"}\r\n            type=\"error\"\r\n          />\r\n        ),\r\n        placement: \"top\",\r\n        duration: 3000,\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      refScannerBox.current = false;\r\n      clearState(\"Box\");\r\n    };\r\n  }, [transStatus]);\r\n\r\n  useEffect(() => {\r\n    if (updateStatus === \"success\") {\r\n      toast.show({\r\n        render: () => (\r\n          <AppAlert\r\n            text={updateData?.data?.message || \"success\"}\r\n            type=\"success\"\r\n          />\r\n        ),\r\n        placement: \"top\",\r\n        duration: 2000,\r\n      });\r\n      clearState(\"All\");\r\n    } else if (updateStatus === \"error\") {\r\n      toast.show({\r\n        render: () => (\r\n          <AppAlert\r\n            text={updateError?.response?.data?.message || \"error\"}\r\n            type=\"error\"\r\n          />\r\n        ),\r\n        placement: \"top\",\r\n        duration: 3000,\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      refScanner.current = false;\r\n      refScannerBox.current = false;\r\n    };\r\n  }, [updateStatus]);\r\n\r\n  useEffect(() => {\r\n    refInput?.current?.focus();\r\n    refInputBox?.current?.focus();\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearState(\"All\");\r\n      queryClient.clear();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!camera && !camera2 ? (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n          <Box flex={1}>\r\n            <LoadingScreen show={itemIsLoading ||updateIsLoading || transIsLoading} />\r\n            <VStack space={5} p={5}>\r\n              <FormControl isRequired isInvalid={\"JOB_ID\" in errors}>\r\n                <Select\r\n                  h={50}\r\n                  size={20}\r\n                  width={\"100%\"}\r\n                  accessibilityLabel=\"Choose Service\"\r\n                  placeholder=\"REPACK ORDER NO.\"\r\n                  selectedValue={order.JOB || \"\"}\r\n                  onValueChange={(value) => handleChangeOrder(value)}\r\n                >\r\n                  {orderData?.data?.data?.map((value: any) => {\r\n                    return (\r\n                      <Select.Item\r\n                        key={value.JOB_ID}\r\n                        label={value.JOB_No}\r\n                        value={`${value.JOB_ID}|${value.JOB_QTY}`}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Select>\r\n                {\"JOB_ID\" in errors && (\r\n                  <FormControl.ErrorMessage>\r\n                    {errors.JOB_ID}\r\n                  </FormControl.ErrorMessage>\r\n                )}\r\n              </FormControl>\r\n              <FormControl isRequired isInvalid={\"QR_NO\" in errors}>\r\n                <Input\r\n                  h={50}\r\n                  size={20}\r\n                  ref={refInput}\r\n                  showSoftInputOnFocus={false}\r\n                  variant=\"underlined\"\r\n                  p={2}\r\n                  placeholder=\"SCAN QR PART\"\r\n                  isDisabled={disabledItem}\r\n                  InputRightElement={\r\n                    <Icon\r\n                      size={35}\r\n                      color={\"primary.600\"}\r\n                      as={<MaterialIcons name=\"qr-code-scanner\" />}\r\n                      onPress={() => setCamera(true)}\r\n                      disabled={disabledItem}\r\n                    />\r\n                  }\r\n                  autoFocus\r\n                  value={/* item?.QR_NO || item?.Item_Code ||  */\"\"}\r\n                  onChangeText={(value) => handleScanner(value)}\r\n                />\r\n                {\"QR_NO\" in errors && (\r\n                  <FormControl.ErrorMessage>\r\n                    {errors.QR_NO}\r\n                  </FormControl.ErrorMessage>\r\n                )}\r\n              </FormControl>\r\n              <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                style={{ height: \"45%\" }}\r\n                refreshControl={\r\n                  <RefreshControl\r\n                    refreshing={bomIsLoading}\r\n                    onRefresh={() => orderRefetch()}\r\n                  />\r\n                }\r\n              >\r\n                <TouchableOpacity activeOpacity={1}>\r\n                  <DataTable>\r\n                    <DataTable.Header>\r\n                      <DataTable.Title style={styles.table_title_10}>\r\n                        <Text bold>NO.</Text>\r\n                      </DataTable.Title>\r\n                      <DataTable.Title style={styles.table_title_54}>\r\n                        <Text bold>PART</Text>\r\n                      </DataTable.Title>\r\n                      <DataTable.Title numeric style={styles.table_title_18}>\r\n                        <Text bold>ACT</Text>\r\n                      </DataTable.Title>\r\n                      <DataTable.Title numeric style={styles.table_title_18}>\r\n                        <Text bold>BOM</Text>\r\n                      </DataTable.Title>\r\n                    </DataTable.Header>\r\n                    {bomData?.data?.data?.map((value: any, key: number) => {\r\n                      return (\r\n                        <DataTable.Row key={key}>\r\n                          <DataTable.Title style={styles.table_title_10}>\r\n                            {value.No}\r\n                          </DataTable.Title>\r\n                          <DataTable.Cell style={styles.table_title_54}>\r\n                            <Text\r\n                              color={\r\n                                value.Product_ID === 3\r\n                                  ? \"indigo.500\"\r\n                                  : value.Product_ID === 4\r\n                                  ? \"blue.500\"\r\n                                  : \"black\"\r\n                              }\r\n                            >\r\n                              {value.SP}\r\n                            </Text>\r\n                          </DataTable.Cell>\r\n                          <DataTable.Cell numeric style={styles.table_title_18}>\r\n                            <Text bold color={\"red.600\"}>\r\n                              {value.Actual}\r\n                            </Text>\r\n                          </DataTable.Cell>\r\n                          <DataTable.Cell numeric style={styles.table_title_18}>\r\n                            {value.BOM}\r\n                          </DataTable.Cell>\r\n                        </DataTable.Row>\r\n                      );\r\n                    }) || (\r\n                      <DataTable.Row>\r\n                        <DataTable.Title>No Data</DataTable.Title>\r\n                      </DataTable.Row>\r\n                    )}\r\n                  </DataTable>\r\n                </TouchableOpacity>\r\n              </ScrollView>\r\n              <HStack alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n                <FormControl\r\n                  w=\"50%\"\r\n                  isRequired\r\n                  isInvalid={\"QR_NO_BOX\" in errors}\r\n                  isDisabled={disabledBox}\r\n                >\r\n                  <Input\r\n                    h={50}\r\n                    size={20}\r\n                    ref={refInputBox}\r\n                    showSoftInputOnFocus={false}\r\n                    variant=\"underlined\"\r\n                    p={2}\r\n                    placeholder=\"QR BOX\"\r\n                    InputRightElement={\r\n                      <Icon\r\n                        size={35}\r\n                        color={\"primary.600\"}\r\n                        as={<MaterialIcons name=\"qr-code-scanner\" />}\r\n                        onPress={() => setCamera2(true)}\r\n                        disabled={disabledBox}\r\n                      />\r\n                    }\r\n                    value={box?.QR_NO_BOX || \"\"}\r\n                    onChangeText={(value) => handleScannerBox(value)}\r\n                  />\r\n                  {\"QR_NO_BOX\" in errors && (\r\n                    <FormControl.ErrorMessage>\r\n                      {errors.QR_NO_BOX}\r\n                    </FormControl.ErrorMessage>\r\n                  )}\r\n                </FormControl>\r\n\r\n                <Text fontSize={25}>\r\n                  <Text bold color={\"green.600\"}>{`${\r\n                    order?.BOX_QTY || 0\r\n                  }`}</Text>\r\n                  {` / ${order?.JOB_QTY || 0} BOX`}\r\n                </Text>\r\n              </HStack>\r\n              <Button\r\n                backgroundColor=\"green.600\"\r\n                leftIcon={\r\n                  <Icon as={<MaterialIcons name=\"check\" />} size=\"sm\" />\r\n                }\r\n                isDisabled={disabledButton}\r\n                onPress={handleAlertDialog}\r\n              >\r\n                SAVE\r\n              </Button>\r\n            </VStack>\r\n            <AppAlertDialog\r\n              isOpenAlertDialog={isOpenAlertDialog}\r\n              setIsOpenAlertDialog={setIsOpenAlertDialog}\r\n              handleSubmit={handleSubmit}\r\n            />\r\n            <AlertDialogSemi\r\n              itemSemi={item}\r\n              isOpenAlertDialogSemi={isOpenAlertDialogSemi}\r\n              setIsOpenAlertDialogSemi={setIsOpenAlertDialogSemi}\r\n              handleScannerSubmit={handleScannerSubmit}\r\n            />\r\n          </Box>\r\n        </TouchableWithoutFeedback>\r\n      ) : !camera2 ? (\r\n        <AppScanner handleScanner={handleScanner} />\r\n      ) : (\r\n        <AppScanner handleScanner={handleScannerBox} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobRepack;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}