{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Box, Input, Icon, VStack, Button, useToast, FormControl, HStack, Text } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { DataTable } from \"react-native-paper\";\nimport { getDataFromQR } from \"../../utils/qr\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport AppScanner from \"../../components/AppScanner\";\nimport AppAlert from \"../../components/AppAlert\";\nimport { useCheckPart } from \"../../hooks/useCheckPart\";\nimport { useUpdateShipToWH } from \"../../hooks/useShipToWH\";\nimport { styles } from \"../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar ShipToWH = function ShipToWH() {\n  var initItem = {\n    QR_NO: \"\"\n  };\n  var initItems = [];\n  var initErrors = {};\n  var toast = useToast();\n  var queryClient = useQueryClient();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      camera = _useState2[0],\n      setCamera = _useState2[1];\n\n  var _useState3 = useState(initItem),\n      _useState4 = _slicedToArray(_useState3, 2),\n      item = _useState4[0],\n      setItem = _useState4[1];\n\n  var _useState5 = useState(initItems),\n      _useState6 = _slicedToArray(_useState5, 2),\n      items = _useState6[0],\n      setItems = _useState6[1];\n\n  var _useState7 = useState(initErrors),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errors = _useState8[0],\n      setErrors = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      disabledButton = _useState10[0],\n      setDisabledButton = _useState10[1];\n\n  var refInput = useRef(null);\n  var refScanner = useRef(false);\n\n  var _useCheckPart = useCheckPart({\n    QR_NO: (item == null ? void 0 : item.QR_NO) || \"\"\n  }),\n      itemIsLoading = _useCheckPart.isLoading,\n      itemStatus = _useCheckPart.status,\n      itemError = _useCheckPart.error,\n      itemData = _useCheckPart.data,\n      itemRefetch = _useCheckPart.refetch;\n\n  var _useUpdateShipToWH = useUpdateShipToWH(),\n      updateIsLoading = _useUpdateShipToWH.isLoading,\n      updateIsError = _useUpdateShipToWH.isError,\n      updateStatus = _useUpdateShipToWH.status,\n      updateError = _useUpdateShipToWH.error,\n      updateMutate = _useUpdateShipToWH.mutate,\n      updateData = _useUpdateShipToWH.data;\n\n  var handleScanner = function handleScanner(value) {\n    setCamera(false);\n\n    if (!value) {\n      return;\n    }\n\n    clearState(\"Error\");\n    var qr = getDataFromQR(value);\n    setItem(_objectSpread(_objectSpread({}, item), {}, {\n      QR_NO: (qr == null ? void 0 : qr.QR_NO) || \"\"\n    }));\n    refScanner.current = true;\n  };\n\n  var handleSubmit = function handleSubmit() {\n    updateMutate(items);\n  };\n\n  var calculateTotal = function calculateTotal() {\n    if (parseInt(items.length) <= 20 && parseInt(items.length) > 0) {\n      setDisabledButton(false);\n    }\n  };\n\n  var validateErrors = function validateErrors() {\n    refScanner.current = false;\n\n    if (!item.QR_NO) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        QR_NO: \"Invalid QR format\"\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    if (!itemData.data.status) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        QR_NO: \"\" + itemData.data.message\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    if (!itemData.data.data.Location_ID || parseInt(itemData.data.data.Location_ID) !== 1) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        QR_NO: \"Product not in Store Repack Location\"\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    if (!itemData.data.data.Product_ID || parseInt(itemData.data.data.Product_ID) !== 1) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        QR_NO: \"Product is not FG\"\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    if (!itemData.data.data.ItemStatus_ID || parseInt(itemData.data.data.ItemStatus_ID) !== 5) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        QR_NO: \"Status product is not Good\"\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    if (items.filter(function (value) {\n      return value.QR_NO === item.QR_NO;\n    }).length > 0) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        QR_NO: \"QR No. this duplicate in list\"\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    if (parseInt(items.length) === 20) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        QR_NO: \"Total completed can not scan\"\n      }));\n      clearState(\"Item\");\n      return false;\n    }\n\n    return true;\n  };\n\n  var clearState = function clearState(type) {\n    if (type === \"All\") {\n      setItem(initItem);\n      setItems(initItems);\n      setErrors(initErrors);\n      setDisabledButton(true);\n    } else if (type === \"Item\") {\n      setItem(initItem);\n    } else if (type === \"Items\") {\n      setItems(initItems);\n    } else {\n      setErrors(initErrors);\n    }\n  };\n\n  useEffect(function () {\n    itemRefetch();\n    calculateTotal();\n  }, [item]);\n  useEffect(function () {\n    if (!itemData) {\n      return;\n    }\n\n    if (refScanner.current && validateErrors()) {\n      var _itemData$data;\n\n      var itemQR = _objectSpread({}, (itemData == null ? void 0 : (_itemData$data = itemData.data) == null ? void 0 : _itemData$data.data) || {});\n\n      var itemList = _toConsumableArray(items);\n\n      itemList.push(itemQR);\n      setItems(itemList);\n      clearState(\"Item\");\n    }\n  }, [itemData]);\n  useEffect(function () {\n    if (updateStatus === \"success\") {\n      toast.show({\n        render: function render() {\n          var _updateData$data;\n\n          return _jsx(AppAlert, {\n            text: (updateData == null ? void 0 : (_updateData$data = updateData.data) == null ? void 0 : _updateData$data.message) || \"success\",\n            type: \"success\"\n          });\n        },\n        placement: \"top\",\n        duration: 2000\n      });\n      clearState(\"All\");\n    } else if (updateStatus === \"error\") {\n      toast.show({\n        render: function render() {\n          var _updateError$response, _updateError$response2;\n\n          return _jsx(AppAlert, {\n            text: (updateError == null ? void 0 : (_updateError$response = updateError.response) == null ? void 0 : (_updateError$response2 = _updateError$response.data) == null ? void 0 : _updateError$response2.message) || \"error\",\n            type: \"error\"\n          });\n        },\n        placement: \"top\",\n        duration: 3000\n      });\n    }\n\n    return function () {\n      refScanner.current = false;\n    };\n  }, [updateStatus]);\n  useEffect(function () {\n    var _refInput$current;\n\n    refInput == null ? void 0 : (_refInput$current = refInput.current) == null ? void 0 : _refInput$current.focus();\n  });\n  useEffect(function () {\n    return function () {\n      clearState(\"All\");\n      queryClient.clear();\n    };\n  }, []);\n  return _jsx(_Fragment, {\n    children: !camera ? _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      accessible: false,\n      children: _jsxs(Box, {\n        flex: 1,\n        children: [_jsx(LoadingScreen, {\n          show: itemIsLoading || updateIsLoading\n        }), _jsxs(VStack, {\n          space: 10,\n          p: 5,\n          children: [_jsxs(FormControl, {\n            isRequired: true,\n            isInvalid: \"QR_NO\" in errors,\n            children: [_jsx(Input, {\n              h: 50,\n              size: 20,\n              ref: refInput,\n              showSoftInputOnFocus: false,\n              variant: \"underlined\",\n              p: 2,\n              placeholder: \"SCAN QR\",\n              InputRightElement: _jsx(Icon, {\n                size: 35,\n                color: \"primary.600\",\n                as: _jsx(MaterialIcons, {\n                  name: \"qr-code-scanner\"\n                }),\n                onPress: function onPress() {\n                  return setCamera(true);\n                }\n              }),\n              autoFocus: true,\n              value: (item == null ? void 0 : item.QR_NO) || \"\",\n              onChangeText: function onChangeText(value) {\n                return handleScanner(value);\n              }\n            }), \"QR_NO\" in errors && _jsx(FormControl.ErrorMessage, {\n              children: errors.QR_NO\n            })]\n          }), _jsx(ScrollView, {\n            keyboardShouldPersistTaps: \"handled\",\n            style: {\n              height: \"45%\"\n            },\n            children: _jsx(TouchableOpacity, {\n              activeOpacity: 1,\n              children: _jsxs(DataTable, {\n                children: [_jsxs(DataTable.Header, {\n                  children: [_jsx(DataTable.Title, {\n                    style: styles.table_title_10,\n                    children: _jsx(Text, {\n                      bold: true,\n                      children: \"NO.\"\n                    })\n                  }), _jsx(DataTable.Title, {\n                    style: styles.table_title_36,\n                    children: _jsx(Text, {\n                      bold: true,\n                      children: \"QR NO.\"\n                    })\n                  }), _jsx(DataTable.Title, {\n                    children: _jsx(Text, {\n                      bold: true,\n                      children: \"ITEM CODE\"\n                    })\n                  })]\n                }), items.length > 0 ? items.map(function (value, key) {\n                  return _jsxs(DataTable.Row, {\n                    children: [_jsx(DataTable.Title, {\n                      style: styles.table_title_10,\n                      children: key + 1\n                    }), _jsx(DataTable.Cell, {\n                      style: styles.table_title_36,\n                      children: value.QR_NO\n                    }), _jsx(DataTable.Cell, {\n                      children: value.ITEM_CODE\n                    })]\n                  }, key);\n                }) : _jsx(DataTable.Row, {\n                  children: _jsx(DataTable.Title, {\n                    children: \"No Data\"\n                  })\n                })]\n              })\n            })\n          }), _jsxs(VStack, {\n            children: [_jsxs(HStack, {\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              children: [_jsx(Text, {\n                fontSize: 25,\n                children: \"SHIP TO WH\"\n              }), _jsx(Text, {\n                fontSize: 25,\n                children: _jsx(Text, {\n                  bold: true,\n                  color: \"green.600\",\n                  children: \"\" + (items.length || 0)\n                })\n              })]\n            }), _jsxs(HStack, {\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              children: [_jsx(Text, {\n                fontSize: 25,\n                children: \"MAX\"\n              }), _jsx(Text, {\n                fontSize: 25,\n                children: \"20\"\n              })]\n            })]\n          }), _jsx(Button, {\n            backgroundColor: \"green.600\",\n            leftIcon: _jsx(Icon, {\n              as: _jsx(MaterialIcons, {\n                name: \"check\"\n              }),\n              size: \"sm\"\n            }),\n            isDisabled: disabledButton,\n            onPress: handleSubmit,\n            children: \"SAVE\"\n          })]\n        })]\n      })\n    }) : _jsx(AppScanner, {\n      handleScanner: handleScanner\n    })\n  });\n};\n\nexport default ShipToWH;","map":{"version":3,"names":["React","useState","useEffect","useRef","useQueryClient","Box","Input","Icon","VStack","Button","useToast","FormControl","HStack","Text","MaterialIcons","DataTable","getDataFromQR","LoadingScreen","AppScanner","AppAlert","useCheckPart","useUpdateShipToWH","styles","ShipToWH","initItem","QR_NO","initItems","initErrors","toast","queryClient","camera","setCamera","item","setItem","items","setItems","errors","setErrors","disabledButton","setDisabledButton","refInput","refScanner","itemIsLoading","isLoading","itemStatus","status","itemError","error","itemData","data","itemRefetch","refetch","updateIsLoading","updateIsError","isError","updateStatus","updateError","updateMutate","mutate","updateData","handleScanner","value","clearState","qr","current","handleSubmit","calculateTotal","parseInt","length","validateErrors","message","Location_ID","Product_ID","ItemStatus_ID","filter","type","itemQR","itemList","push","show","render","placement","duration","response","focus","clear","Keyboard","dismiss","height","table_title_10","table_title_36","map","key","ITEM_CODE"],"sources":["D:/Dev/after-sale-mobile/src/views/ShipToWH/ShipToWH.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport {\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  Box,\r\n  Input,\r\n  Icon,\r\n  VStack,\r\n  Button,\r\n  useToast,\r\n  FormControl,\r\n  HStack,\r\n  Text,\r\n} from \"native-base\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { DataTable } from \"react-native-paper\";\r\n\r\nimport { getDataFromQR } from \"../../utils/qr\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport AppScanner from \"../../components/AppScanner\";\r\nimport AppAlert from \"../../components/AppAlert\";\r\n\r\nimport { useCheckPart } from \"../../hooks/useCheckPart\";\r\nimport { useUpdateShipToWH } from \"../../hooks/useShipToWH\";\r\n\r\nimport { styles } from \"../styles\";\r\n\r\nconst ShipToWH: React.FC = () => {\r\n  const initItem = { QR_NO: \"\" };\r\n  const initItems: any[] = [];\r\n  const initErrors = {};\r\n\r\n  const toast = useToast();\r\n  const queryClient = useQueryClient();\r\n\r\n  const [camera, setCamera] = useState<boolean>(false);\r\n\r\n  const [item, setItem] = useState<any>(initItem);\r\n  const [items, setItems] = useState<any>(initItems);\r\n  const [errors, setErrors] = useState<any>(initErrors);\r\n\r\n  const [disabledButton, setDisabledButton] = useState<boolean>(true);\r\n\r\n  const refInput = useRef<any>(null);\r\n  const refScanner = useRef<boolean>(false);\r\n\r\n  const {\r\n    isLoading: itemIsLoading,\r\n    status: itemStatus,\r\n    error: itemError,\r\n    data: itemData,\r\n    refetch: itemRefetch,\r\n  } = useCheckPart({\r\n    QR_NO: item?.QR_NO || \"\",\r\n  });\r\n\r\n  const {\r\n    isLoading: updateIsLoading,\r\n    isError: updateIsError,\r\n    status: updateStatus,\r\n    error: updateError,\r\n    mutate: updateMutate,\r\n    data: updateData,\r\n  } = useUpdateShipToWH();\r\n\r\n  const handleScanner = (value: any) => {\r\n    setCamera(false);\r\n\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    clearState(\"Error\");\r\n\r\n    const qr = getDataFromQR(value);\r\n\r\n    setItem({\r\n      ...item,\r\n      QR_NO: qr?.QR_NO || \"\",\r\n    });\r\n\r\n    refScanner.current = true;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    updateMutate(items);\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    if (parseInt(items.length) <= 20 && parseInt(items.length) > 0) {\r\n      setDisabledButton(false);\r\n    }\r\n  };\r\n\r\n  const validateErrors = () => {\r\n    refScanner.current = false;\r\n\r\n    if (!item.QR_NO) {\r\n      setErrors({ ...errors, QR_NO: \"Invalid QR format\" });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    if (!itemData.data.status) {\r\n      setErrors({ ...errors, QR_NO: `${itemData.data.message}` });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !itemData.data.data.Location_ID ||\r\n      parseInt(itemData.data.data.Location_ID) !== 1\r\n    ) {\r\n      setErrors({ ...errors, QR_NO: \"Product not in Store Repack Location\" });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !itemData.data.data.Product_ID ||\r\n      parseInt(itemData.data.data.Product_ID) !== 1\r\n    ) {\r\n      setErrors({ ...errors, QR_NO: \"Product is not FG\" });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !itemData.data.data.ItemStatus_ID ||\r\n      parseInt(itemData.data.data.ItemStatus_ID) !== 5\r\n    ) {\r\n      setErrors({ ...errors, QR_NO: \"Status product is not Good\" });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      items.filter((value: any) => {\r\n        return value.QR_NO === item.QR_NO;\r\n      }).length > 0\r\n    ) {\r\n      setErrors({ ...errors, QR_NO: \"QR No. this duplicate in list\" });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    if (parseInt(items.length) === 20) {\r\n      setErrors({ ...errors, QR_NO: \"Total completed can not scan\" });\r\n      clearState(\"Item\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const clearState = (type: string) => {\r\n    if (type === \"All\") {\r\n      setItem(initItem);\r\n      setItems(initItems);\r\n      setErrors(initErrors);\r\n      setDisabledButton(true);\r\n    } else if (type === \"Item\") {\r\n      setItem(initItem);\r\n    } else if (type === \"Items\") {\r\n      setItems(initItems);\r\n    } else {\r\n      setErrors(initErrors);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    itemRefetch();\r\n    calculateTotal();\r\n  }, [item]);\r\n\r\n  useEffect(() => {\r\n    if (!itemData) {\r\n      return;\r\n    }\r\n\r\n    if (refScanner.current && validateErrors()) {\r\n      let itemQR = { ...(itemData?.data?.data || {}) };\r\n\r\n      let itemList = [...items];\r\n\r\n      itemList.push(itemQR);\r\n\r\n      setItems(itemList);\r\n\r\n      clearState(\"Item\");\r\n    }\r\n  }, [itemData]);\r\n\r\n  useEffect(() => {\r\n    if (updateStatus === \"success\") {\r\n      toast.show({\r\n        render: () => (\r\n          <AppAlert\r\n            text={updateData?.data?.message || \"success\"}\r\n            type=\"success\"\r\n          />\r\n        ),\r\n        placement: \"top\",\r\n        duration: 2000,\r\n      });\r\n      clearState(\"All\");\r\n    } else if (updateStatus === \"error\") {\r\n      toast.show({\r\n        render: () => (\r\n          <AppAlert\r\n            text={updateError?.response?.data?.message || \"error\"}\r\n            type=\"error\"\r\n          />\r\n        ),\r\n        placement: \"top\",\r\n        duration: 3000,\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      refScanner.current = false;\r\n    };\r\n  }, [updateStatus]);\r\n\r\n  useEffect(() => {\r\n    refInput?.current?.focus();\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearState(\"All\");\r\n      queryClient.clear();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!camera ? (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n          <Box flex={1}>\r\n            <LoadingScreen show={itemIsLoading || updateIsLoading} />\r\n            <VStack space={10} p={5}>\r\n              <FormControl isRequired isInvalid={\"QR_NO\" in errors}>\r\n                <Input\r\n                  h={50}\r\n                  size={20}\r\n                  ref={refInput}\r\n                  showSoftInputOnFocus={false}\r\n                  variant=\"underlined\"\r\n                  p={2}\r\n                  placeholder=\"SCAN QR\"\r\n                  InputRightElement={\r\n                    <Icon\r\n                      size={35}\r\n                      color={\"primary.600\"}\r\n                      as={<MaterialIcons name=\"qr-code-scanner\" />}\r\n                      onPress={() => setCamera(true)}\r\n                    />\r\n                  }\r\n                  autoFocus\r\n                  value={item?.QR_NO || \"\"}\r\n                  onChangeText={(value) => handleScanner(value)}\r\n                />\r\n                {\"QR_NO\" in errors && (\r\n                  <FormControl.ErrorMessage>\r\n                    {errors.QR_NO}\r\n                  </FormControl.ErrorMessage>\r\n                )}\r\n              </FormControl>\r\n              <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                style={{ height: \"45%\" }}\r\n              >\r\n                <TouchableOpacity activeOpacity={1}>\r\n                  <DataTable>\r\n                    <DataTable.Header>\r\n                      <DataTable.Title style={styles.table_title_10}>\r\n                        <Text bold>NO.</Text>\r\n                      </DataTable.Title>\r\n                      <DataTable.Title style={styles.table_title_36}>\r\n                        <Text bold>QR NO.</Text>\r\n                      </DataTable.Title>\r\n                      <DataTable.Title>\r\n                        <Text bold>ITEM CODE</Text>\r\n                      </DataTable.Title>\r\n                    </DataTable.Header>\r\n                    {items.length > 0 ? (\r\n                      items.map((value: any, key: number) => {\r\n                        return (\r\n                          <DataTable.Row key={key}>\r\n                            <DataTable.Title style={styles.table_title_10}>\r\n                              {key + 1}\r\n                            </DataTable.Title>\r\n                            <DataTable.Cell style={styles.table_title_36}>\r\n                              {value.QR_NO}\r\n                            </DataTable.Cell>\r\n                            <DataTable.Cell>{value.ITEM_CODE}</DataTable.Cell>\r\n                          </DataTable.Row>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <DataTable.Row>\r\n                        <DataTable.Title>No Data</DataTable.Title>\r\n                      </DataTable.Row>\r\n                    )}\r\n                  </DataTable>\r\n                </TouchableOpacity>\r\n              </ScrollView>\r\n              <VStack>\r\n                <HStack alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n                  <Text fontSize={25}>{`SHIP TO WH`}</Text>\r\n                  <Text fontSize={25}>\r\n                    <Text bold color={\"green.600\"}>{`${\r\n                      items.length || 0\r\n                    }`}</Text>\r\n                  </Text>\r\n                </HStack>\r\n                <HStack alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n                  <Text fontSize={25}>{`MAX`}</Text>\r\n                  <Text fontSize={25}>{`20`}</Text>\r\n                </HStack>\r\n              </VStack>\r\n              <Button\r\n                backgroundColor=\"green.600\"\r\n                leftIcon={\r\n                  <Icon as={<MaterialIcons name=\"check\" />} size=\"sm\" />\r\n                }\r\n                isDisabled={disabledButton}\r\n                onPress={handleSubmit}\r\n              >\r\n                SAVE\r\n              </Button>\r\n            </VStack>\r\n          </Box>\r\n        </TouchableWithoutFeedback>\r\n      ) : (\r\n        <AppScanner handleScanner={handleScanner} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShipToWH;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}