{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { httpClient } from \"../services/axios\";\nexport var useReceiveSaleService = function useReceiveSaleService() {\n  var getReceiveSaleService = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(httpClient.get('/receive_part'));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return useQuery(\"ReceiveSaleService\", function () {\n    return getReceiveSaleService();\n  }, {\n    enabled: true,\n    refetchOnWindowFocus: true,\n    refetchOnMount: true\n  });\n};\nexport var useReceiveSaleServiceItem = function useReceiveSaleServiceItem(_ref) {\n  var Rec_ID = _ref.Rec_ID;\n\n  var getReceiveSaleServiceItem = function _callee2(Rec_ID) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(httpClient.get(\"/receive_part_item?Rec_ID=\" + Rec_ID));\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return useQuery([\"ReceiveSaleServiceItem\", Rec_ID], function () {\n    return getReceiveSaleServiceItem(Rec_ID);\n  }, {\n    enabled: true\n  });\n};\nexport var useExecReceiveSaleServiceTransactions = function useExecReceiveSaleServiceTransactions() {\n  var queryClient = useQueryClient();\n\n  var execReceiveSaleServiceTransactions = function _callee3(params) {\n    var data;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            data = new FormData();\n            Object.keys(params).forEach(function (value) {\n              data.append(value, params[value] || \"\");\n            });\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(httpClient.post(\"/exec_receive_part_transaction\", data));\n\n          case 4:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return useMutation(\"ExecReceiveSaleServiceTransactions\", function (params) {\n    return execReceiveSaleServiceTransactions(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('ReceiveSaleServiceItem');\n    },\n    onError: function onError(error) {\n      var _error$response, _error$response$data;\n\n      console.log((error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || error.message);\n    }\n  });\n};\nexport var useUpdateReceiveSaleService = function useUpdateReceiveSaleService() {\n  var queryClient = useQueryClient();\n\n  var updateReceiveSaleService = function _callee4(params) {\n    var data;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            data = new FormData();\n            Object.keys(params).forEach(function (value) {\n              data.append(value, params[value] || \"\");\n            });\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(httpClient.post(\"/update_receive_part\", data));\n\n          case 4:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return useMutation(\"UpdateReceiveSaleService\", function (params) {\n    return updateReceiveSaleService(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('ReceiveSaleService');\n    },\n    onError: function onError(error) {\n      var _error$response2, _error$response2$data;\n\n      console.log((error == null ? void 0 : (_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || error.message);\n    }\n  });\n};","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","httpClient","useReceiveSaleService","getReceiveSaleService","get","enabled","refetchOnWindowFocus","refetchOnMount","useReceiveSaleServiceItem","Rec_ID","getReceiveSaleServiceItem","useExecReceiveSaleServiceTransactions","queryClient","execReceiveSaleServiceTransactions","params","data","FormData","Object","keys","forEach","value","append","post","onSuccess","response","invalidateQueries","onError","error","console","log","message","useUpdateReceiveSaleService","updateReceiveSaleService"],"sources":["D:/Dev/after-sale-mobile/src/hooks/useReceiveSaleService.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport { httpClient } from \"../services/axios\";\r\n\r\nexport const useReceiveSaleService = () => {\r\n  const getReceiveSaleService = async () => {\r\n    return await httpClient.get('/receive_part');\r\n  };\r\n  return useQuery(\r\n    \"ReceiveSaleService\",\r\n    () => getReceiveSaleService(),\r\n    {\r\n      enabled: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      //staleTime: 30000, // not to refresh the data from API is 30 seconds\r\n    }\r\n  );\r\n};\r\n\r\nexport const useReceiveSaleServiceItem = ({Rec_ID}: any) => {\r\n\r\n  const getReceiveSaleServiceItem = async (Rec_ID: any) => {\r\n    \r\n    return await httpClient.get(`/receive_part_item?Rec_ID=${Rec_ID}`);\r\n  };\r\n  return useQuery<any, any, any>(\r\n    [\"ReceiveSaleServiceItem\", Rec_ID],\r\n    () => getReceiveSaleServiceItem(Rec_ID),\r\n    {\r\n      enabled: true,\r\n    }\r\n  );\r\n};\r\n\r\nexport const useExecReceiveSaleServiceTransactions = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const execReceiveSaleServiceTransactions = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/exec_receive_part_transaction\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"ExecReceiveSaleServiceTransactions\",\r\n    (params) => execReceiveSaleServiceTransactions(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('ReceiveSaleServiceItem');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const useUpdateReceiveSaleService = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const updateReceiveSaleService = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/update_receive_part\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"UpdateReceiveSaleService\",\r\n    (params) => updateReceiveSaleService(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('ReceiveSaleService');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}